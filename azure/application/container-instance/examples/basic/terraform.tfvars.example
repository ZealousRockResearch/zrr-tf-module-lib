# Basic Container Instance Configuration Example
# Copy this file to terraform.tfvars and modify the values as needed

# Container group configuration
container_name      = "basic-container-example"
location            = "East US"
resource_group_name = "container-basic-rg"

# Container configuration
containers = [
  {
    name   = "nginx-web"
    image  = "nginx:latest"
    cpu    = 1
    memory = 1.5
    ports = [
      {
        port     = 80
        protocol = "TCP"
      }
    ]
    environment_variables = {
      NGINX_PORT = "80"
    }
  }
]

# Network configuration
ip_address_type = "Public"
exposed_ports = [
  {
    port     = 80
    protocol = "TCP"
  }
]
dns_name_label = "basic-container-demo"

# OS and runtime configuration
os_type        = "Linux"
restart_policy = "Always"

# Tagging
common_tags = {
  Environment = "development"
  Project     = "my-project"
  Owner       = "my-team"
  CostCenter  = "engineering"
  ManagedBy   = "Terraform"
}

container_instance_tags = {
  Application = "web-server"
  Purpose     = "basic-example"
  Monitoring  = "disabled"
  Network     = "public"
}

# Additional configurations available but not used in basic example:

# Multi-container configuration
# containers = [
#   {
#     name   = "frontend"
#     image  = "nginx:latest"
#     cpu    = 0.5
#     memory = 1
#     ports = [
#       {
#         port     = 80
#         protocol = "TCP"
#       }
#     ]
#   },
#   {
#     name   = "backend"
#     image  = "node:16-alpine"
#     cpu    = 0.5
#     memory = 1
#     ports = [
#       {
#         port     = 3000
#         protocol = "TCP"
#       }
#     ]
#     environment_variables = {
#       NODE_ENV = "production"
#       PORT     = "3000"
#     }
#   }
# ]

# Private networking
# ip_address_type = "Private"
# subnet_id       = "/subscriptions/.../subnets/container-subnet"

# Custom DNS configuration
# dns_config = {
#   nameservers    = ["8.8.8.8", "8.8.4.4"]
#   search_domains = ["example.com"]
#   options        = ["ndots:2"]
# }

# Container registry authentication
# container_registry_name = "myregistry"
# container_registry_username = "username"
# container_registry_password = "password"

# Volume mounts
# volumes = [
#   {
#     name                 = "shared-storage"
#     storage_account_name = "mystorageaccount"
#     storage_account_key  = "storage-key"
#     share_name          = "container-share"
#   }
# ]

# Monitoring and alerting
# enable_monitoring = true
# action_group_id   = "/subscriptions/.../actionGroups/container-alerts"
# cpu_alert_threshold    = 80
# memory_alert_threshold = 80

# Managed identity
# managed_identity = {
#   type = "SystemAssigned"
# }

# Naming convention
# use_naming_convention = true
# environment          = "dev"
# location_short       = "eus"

# Health checks
# liveness_probe = {
#   http_get = [
#     {
#       path = "/health"
#       port = 80
#     }
#   ]
#   initial_delay_seconds = 30
#   period_seconds       = 10
# }

# GPU configuration (for ML workloads)
# gpu = {
#   count = 1
#   sku   = "K80"
# }