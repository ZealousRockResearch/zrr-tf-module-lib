# Basic configuration example
location = "East US"

common_tags = {
  Environment = "dev"
  Project     = "my-project"
  Owner       = "team-name"
  CostCenter  = "engineering"
}

# Additional Key Vault specific tags (optional)
# key_vault_tags = {
#   Purpose = "application-secrets"
#   Backup  = "daily"
#   Compliance = "required"
# }

# Key Vault configuration options (all optional with secure defaults)
# name = "my-keyvault-001"
# resource_group_name = "my-existing-rg"  # If not provided, a new RG will be created
# sku_name = "standard"  # or "premium" for HSM-backed keys
#
# Security settings
# enable_rbac_authorization = true  # Use RBAC instead of access policies
# purge_protection_enabled = true   # Prevent permanent deletion
# soft_delete_retention_days = 90   # Days to retain soft-deleted items (7-90)
# public_network_access_enabled = true  # Set to false for private-only access
#
# Encryption settings
# enabled_for_disk_encryption = false
# enabled_for_deployment = false
# enabled_for_template_deployment = false
#
# Network restrictions (uncomment to enable)
# network_acls = {
#   default_action = "Deny"
#   bypass = "AzureServices"
#   ip_rules = ["203.0.113.0/24", "198.51.100.0/24"]
#   virtual_network_subnet_ids = [
#     "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Network/virtualNetworks/example/subnets/example"
#   ]
# }
#
# Access policies (when enable_rbac_authorization = false)
# access_policies = {
#   admin = {
#     object_id = "00000000-0000-0000-0000-000000000000"
#     key_permissions = ["Get", "List", "Create", "Delete", "Update", "Import", "Backup", "Restore"]
#     secret_permissions = ["Get", "List", "Set", "Delete", "Backup", "Restore", "Recover"]
#     certificate_permissions = ["Get", "List", "Create", "Delete", "Update", "Import", "Backup", "Restore"]
#   }
# }
#
# Secrets to create (sensitive - handle carefully)
# secrets = {
#   database-password = {
#     value = "MySecurePassword123!"
#     content_type = "Password"
#     expiration_date = "2025-12-31T23:59:59Z"
#   }
#   api-key = {
#     value = "sk-1234567890abcdef"
#     content_type = "API Key"
#   }
# }
#
# Keys to create
# keys = {
#   encryption-key = {
#     key_type = "RSA"
#     key_size = 2048
#     key_opts = ["encrypt", "decrypt", "sign", "verify", "wrapKey", "unwrapKey"]
#   }
#   signing-key = {
#     key_type = "EC"
#     curve = "P-256"
#     key_opts = ["sign", "verify"]
#   }
# }
#
# Certificate contacts
# certificate_contacts = [
#   {
#     email = "admin@example.com"
#     name = "Certificate Admin"
#     phone = "+1-555-0123"
#   }
# ]
#
# Private endpoint (for private access)
# private_endpoint = {
#   subnet_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Network/virtualNetworks/example/subnets/private"
#   private_dns_zone_ids = [
#     "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"
#   ]
# }
#
# Diagnostic settings (for monitoring)
# diagnostic_setting = {
#   log_analytics_workspace_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.OperationalInsights/workspaces/example"
#   storage_account_id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.Storage/storageAccounts/example"
#   log_categories = ["AuditEvent", "AzurePolicyEvaluationDetails"]
#   metric_categories = ["AllMetrics"]
# }